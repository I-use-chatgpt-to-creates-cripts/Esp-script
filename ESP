local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = game.Workspace.CurrentCamera

-- Ensure Drawing library is available
local Drawing = Drawing or nil
if not Drawing then
    warn("Drawing library is not available")
    return
end

-- Create GUI Elements
local ScreenGui = Instance.new("ScreenGui", PlayerGui)
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame", ScreenGui)
local TitleLabel = Instance.new("TextLabel", Frame)
local LinesButton = Instance.new("TextButton", Frame)
local BoxesButton = Instance.new("TextButton", Frame)

-- Frame properties
Frame.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
Frame.BackgroundTransparency = 0.5
Frame.BorderSizePixel = 0
Frame.Size = UDim2.new(0, 200, 0, 120)  -- Smaller size for compactness
Frame.Position = UDim2.new(0.5, -100, 0, 0)  -- Initially centered at the top of the screen

-- Glow effect
local UIStroke = Instance.new("UIStroke", Frame)
UIStroke.Thickness = 2
UIStroke.Color = Color3.fromRGB(255, 255, 255)

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 10)

-- Draggable functionality
Frame.Active = true
Frame.Draggable = true

-- TitleLabel properties
TitleLabel.Size = UDim2.new(1, 0, 0, 20)
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.Text = "ESP"
TitleLabel.TextColor3 = Color3.new(1, 1, 1)
TitleLabel.BackgroundTransparency = 1
TitleLabel.TextScaled = true  -- Ensures text scales with label size

-- LinesButton properties
LinesButton.Size = UDim2.new(1, 0, 0, 30)
LinesButton.Position = UDim2.new(0, 0, 1, -30)
LinesButton.Text = "Lines"
LinesButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
LinesButton.BorderSizePixel = 0

local LinesUICorner = Instance.new("UICorner", LinesButton)
LinesUICorner.CornerRadius = UDim.new(0, 10)

-- BoxesButton properties
BoxesButton.Size = UDim2.new(1, 0, 0, 30)
BoxesButton.Position = UDim2.new(0, 0, 1, -70)
BoxesButton.Text = "Boxes"
BoxesButton.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
BoxesButton.BorderSizePixel = 0

local BoxesUICorner = Instance.new("UICorner", BoxesButton)
BoxesUICorner.CornerRadius = UDim.new(0, 10)

-- ESP Logic
local linesEnabled = false
local boxesEnabled = false
local espLines = {}
local espBoxes = {}

local function toggleLines()
    linesEnabled = not linesEnabled
    
    LinesButton.BackgroundColor3 = linesEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(200, 200, 200)
    
    -- Clear old ESP lines if lines are disabled
    if not linesEnabled then
        for character, line in pairs(espLines) do
            line:Remove()
            espLines[character] = nil
        end
    end
end

local function toggleBoxes()
    boxesEnabled = not boxesEnabled
    
    BoxesButton.BackgroundColor3 = boxesEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(200, 200, 200)
    
    -- Clear old ESP boxes if boxes are disabled
    if not boxesEnabled then
        for character, box in pairs(espBoxes) do
            box.Visible = false
            espBoxes[character] = nil
        end
    end
end

LinesButton.MouseButton1Click:Connect(function()
    toggleLines()
end)

BoxesButton.MouseButton1Click:Connect(function()
    toggleBoxes()
end)

-- ESP Drawing Logic
local function createESPLine(character)
    local line = Drawing.new("Line")
    line.Thickness = 2
    line.Transparency = 1
    line.Visible = true
    line.Color = Color3.new(1, 0, 0)
    return line
end

local function createESPBox(character)
    local box = Instance.new("BoxHandleAdornment")
    box.Size = character:GetExtentsSize()
    box.Adornee = character
    box.AlwaysOnTop = true
    box.ZIndex = 0
    box.Transparency = 0.5
    box.Color3 = Color3.new(1, 0, 0)
    box.Parent = character
    return box
end

local function updateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local character = player.Character
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            
            if linesEnabled then
                local line = espLines[character]
                if not line then
                    line = createESPLine(character)
                    espLines[character] = line
                end
                
                -- Update line position
                local from = Vector2.new(Frame.Position.X.Offset + Frame.Size.X.Offset / 2, 0)
                local toPosition, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
                local to = Vector2.new(toPosition.X, toPosition.Y)
                
                if onScreen then
                    line.From = from
                    line.To = to
                    line.Visible = true
                else
                    line.Visible = false
                end
            elseif espLines[character] then
                espLines[character]:Remove()
                espLines[character] = nil
            end
            
            if boxesEnabled then
                local box = espBoxes[character]
                if not box then
                    box = createESPBox(character)
                    espBoxes[character] = box
                end
                
                -- Update box visibility
                box.Visible = true
            elseif espBoxes[character] then
                espBoxes[character].Visible = false
                espBoxes[character] = nil
            end
        end
    end
end

RunService.RenderStepped:Connect(function()
    updateESP()
end)

-- Cleanup on Leaving Game
game.Players.PlayerRemoving:Connect(function(player)
    for _, line in pairs(espLines) do
        line:Remove()
    end
    espLines = {}
    
    for _, box in pairs(espBoxes) do
        box.Visible = false
    end
    espBoxes = {}
end)
